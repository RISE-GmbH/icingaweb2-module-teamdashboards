<?php
/* Originally from Icinga Web 2 Elasticsearch Module (c) 2017 Icinga Development Team | GPLv2+ */
/* generated by icingaweb2-module-scaffoldbuilder | GPLv2+ */
/* icingaweb2-module-teamdashboards (c) 2023 | GPLv2+ */

namespace Icinga\Module\Teamdashboards\Controllers;

use Icinga\Web\Controller;

use Icinga\Module\Teamdashboards\Forms\MappingForm;
use Icinga\Module\Teamdashboards\MappingIniRepository;

class MappingController extends Controller
{
    /**
     * Set the title tab
     *
     * @param   string  $label
     */
    public function setTitle($label)
    {
        $this->getTabs()->add(uniqid(), [
            'active'    => true,
            'label'     => $label,
            'url'       => $this->getRequest()->getUrl()
        ]);
    }


    public function init()
    {
        $this->assertPermission('teamdashboards/mapping');
    }

    public function indexAction()
    {
        $this->setTitle($this->translate('Mappings'));
        $this->view->configs = (new MappingIniRepository())->select();

        $this->_helper->viewRenderer->setRender('mapping/table', null, true);
    }

    public function newAction()
    {
        $form = new MappingForm([
            'mode'  => MappingForm::MODE_INSERT
        ]);

        $form->handleRequest();

        $this->setTitle($this->translate('New Mapping'));

        $this->view->form = $form;

        $this->_helper->viewRenderer->setRender('form', null, true);
    }

    public function updateAction()
    {
        $id = $this->params->getRequired('id');

        $form = new MappingForm([
            'mode'          => MappingForm::MODE_UPDATE,
            'identifier'    => $id
        ]);

        $form->handleRequest();


        $this->setTitle($this->translate('Update Mapping'));

        $this->view->form = $form;

        $this->_helper->viewRenderer->setRender('form', null, true);
    }

    public function deleteAction()
    {
        $id = $this->params->getRequired('id');

        $form = new MappingForm([
            'mode'          => MappingForm::MODE_DELETE,
            'identifier'    => $id
        ]);

        $form->handleRequest();

        $this->setTitle($this->translate('Remove Mapping'));

        $this->view->form = $form;

        $this->_helper->viewRenderer->setRender('form', null, true);
    }
}
